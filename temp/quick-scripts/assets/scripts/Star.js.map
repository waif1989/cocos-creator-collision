{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","checkCollision","game","default","serializable","jumpAudio","url","AudioClip","pickRadius","getPlayerDistance","playerPos","player","getPosition","dist","pDistance","node","position","onPicked","gainScore","flyAwayFunc","newRandomFunc","Min","Max","Math","random","actionFinishFunc","self","callFunc","setTimeout","gameOver","spawnNewStar","jumpAble","destroy","onCollisionEnter","console","log","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,UAASF,GAAGG,SADP;;AAGLC,aAAY;AACX;AACAC,kBAAgB,IAFL;AAGX;AACAC,QAAM;AACLC,YAAS,IADJ;AAELC,iBAAc;AAFT,GAJK;AAQX;AACAC,aAAW;AACVF,YAAS,IADC;AAEVG,QAAKV,GAAGW;AAFE,GATA;AAaX;AACAC,cAAY;AAdD,EAHP;;AAoBRC,oBAAmB,6BAAY;AAC9B;AACA,MAAIC,YAAY,KAAKR,IAAL,CAAUS,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,MAAIC,OAAOjB,GAAGkB,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;AACA,SAAOG,IAAP;AACA,EA1BO;;AA4BRI,WAAU,oBAAW;AACpB;AACA,OAAKf,IAAL,CAAUgB,SAAV;AACA,EA/BO;;AAiCRC,cAAa,uBAAY;AACxB,OAAKjB,IAAL,CAAUiB,WAAV;AACA,EAnCO;;AAqCRC,gBAAe,uBAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClC,SAAOC,KAAKC,MAAL,MAAiBF,MAAMD,GAAvB,IAA8BA,GAArC;AACA,EAvCO;;AAyCRI,mBAAkB,4BAAY;AAC7B,MAAIC,OAAO,IAAX;AACA,SAAO9B,GAAG+B,QAAH,CAAY,YAAW;AAC7BC,cAAW,YAAY;AACtB;AACA,QAAI,CAACF,KAAKxB,IAAL,CAAU2B,QAAf,EAAyB;AACxBH,UAAKxB,IAAL,CAAU4B,YAAV;AACAJ,UAAKxB,IAAL,CAAUS,MAAV,CAAiBoB,QAAjB,GAA4B,IAA5B;AACA;AACAL,UAAKX,IAAL,CAAUiB,OAAV;AACA,KALD,MAKO;AACNN,UAAKxB,IAAL,CAAUS,MAAV,CAAiBoB,QAAjB,GAA4B,KAA5B;AACAL,UAAKX,IAAL,CAAUiB,OAAV;AACA;AACD,IAXD,EAWG,IAXH;AAYA,GAbM,EAaJ,IAbI,CAAP;AAcA,EAzDO;;AA2DRC,mBAAkB,4BAAY;AAC7BC,UAAQC,GAAR,CAAY,gBAAZ,EAA8B,KAAKpB,IAAL,CAAUC,QAAxC;AACG,MAAI,KAAKf,cAAT,EAAyB;AACxB,QAAKA,cAAL,GAAsB,KAAtB;AACA,QAAKkB,WAAL;AACA;;;;;;;AAOA,QAAKF,QAAL;AACA;AACJ,EAzEO;;AA2ER;;;;;;;;;AASG;;AAEA;;AAEAmB,MAxFK,mBAwFI,CAER;AA1FI;;AA4FL;AA5FJ","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    \t// 碰撞状态\r\n\t    checkCollision: true,\r\n\t    // 暂存 Game 对象的引用\r\n\t    game: {\r\n\t\t    default: null,\r\n\t\t    serializable: false\r\n\t    },\r\n\t    // 跳跃音效资源\r\n\t    jumpAudio: {\r\n\t\t    default: null,\r\n\t\t    url: cc.AudioClip\r\n\t    },\r\n\t    // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n\t    pickRadius: 0\r\n    },\r\n\t\r\n\tgetPlayerDistance: function () {\r\n\t\t// 根据 player 节点位置判断距离\r\n\t\tvar playerPos = this.game.player.getPosition();\r\n\t\t// 根据两点位置计算两点之间距离\r\n\t\tvar dist = cc.pDistance(this.node.position, playerPos);\r\n\t\treturn dist;\r\n\t},\r\n\t\r\n\tonPicked: function() {\r\n\t\t// 调用 Game 脚本的得分方法\r\n\t\tthis.game.gainScore();\r\n\t},\r\n\t\r\n\tflyAwayFunc: function () {\r\n\t\tthis.game.flyAwayFunc();\r\n\t},\r\n\t\r\n\tnewRandomFunc: function (Min, Max) {\r\n\t\treturn Math.random() * (Max - Min) + Min;\r\n\t},\r\n\t\r\n\tactionFinishFunc: function () {\r\n\t\tvar self = this;\r\n\t\treturn cc.callFunc(function() {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\t// 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n\t\t\t\tif (!self.game.gameOver) {\r\n\t\t\t\t\tself.game.spawnNewStar();\r\n\t\t\t\t\tself.game.player.jumpAble = true;\r\n\t\t\t\t\t// 然后销毁当前星星节点\r\n\t\t\t\t\tself.node.destroy();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.game.player.jumpAble = false;\r\n\t\t\t\t\tself.node.destroy();\r\n\t\t\t\t}\r\n\t\t\t}, 2000);\r\n\t\t}, this);\r\n\t},\r\n\t\r\n\tonCollisionEnter: function () {\r\n\t\tconsole.log('Star collision', this.node.position);\r\n    \tif (this.checkCollision) {\r\n\t\t    this.checkCollision = false;\r\n\t\t    this.flyAwayFunc();\r\n\t\t    /*var t = cc.random0To1() > 0.5 ? -1 : 1;\r\n\t\t    var actionAll = cc.spawn(\r\n\t\t\t    cc.moveTo(2, cc.p(0, 0)),\r\n\t\t\t    cc.rotateBy(2, 720),\r\n\t\t\t    this.actionFinishFunc()\r\n\t\t    );\r\n\t\t    this.node.runAction(actionAll.easing(cc.easeIn(0.5)));*/\r\n\t\t    this.onPicked();\r\n\t    }\r\n\t},\r\n\t\r\n\t/*update: function (dt) {\r\n\t\t// 每帧判断和主角之间的距离是否小于收集距离\r\n\t\tif (this.getPlayerDistance() < this.pickRadius) {\r\n\t\t\t// 调用收集行为\r\n\t\t\tthis.onPicked();\r\n\t\t\treturn;\r\n\t\t}\r\n\t},*/\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}