{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpAble","game","default","serializable","jumpHeight","jumpDuration","maxMoveSpeed","accel","onLoad","accLeft","accRight","xSpeed","setJumpAction","self","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","finished","callFunc","round","sequence","playerJump","gameOver","node","runAction","setInputTouchControl","on","Node","EventType","TOUCH_START","event","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACRC,UAASF,GAAGG,SADJ;;AAGLC,aAAY;AACdC,YAAU,IADI;AAEX;AACAC,QAAM;AACLC,YAAS,IADJ;AAELC,iBAAc;AAFT,GAHK;AAOX;AACAC,cAAY,CARD;AASX;AACAC,gBAAc,CAVH;AAWX;AACAC,gBAAc,CAZH;AAaX;AACAC,SAAO;AAdI,EAHP;;AAoBRC,SAAQ,kBAAY;AACnB;AACA;;;AAGA;AACA,OAAKC,OAAL,GAAe,KAAf;AACA,OAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,OAAKC,MAAL,GAAc,CAAd;;AAEA;AACA;AACA;AACA,EAlCO;;AAoCRC,gBAAe,yBAAY;AAC1B,MAAIC,OAAO,IAAX;AACA,OAAKb,QAAL,GAAgB,KAAhB;AACA;AACA,MAAIc,SAASnB,GAAGoB,MAAH,CAAU,KAAKV,YAAf,EAA6BV,GAAGqB,CAAH,CAAK,CAAL,EAAQ,KAAKZ,UAAb,CAA7B,EAAuDa,MAAvD,CAA8DtB,GAAGuB,kBAAH,EAA9D,CAAb;AACA;AACA,MAAIC,WAAWxB,GAAGoB,MAAH,CAAU,KAAKV,YAAf,EAA6BV,GAAGqB,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKZ,UAAd,CAA7B,EAAwDa,MAAxD,CAA+DtB,GAAGyB,iBAAH,EAA/D,CAAf;AACA;AACA;AACA,MAAIC,WAAW1B,GAAG2B,QAAH,CAAY,YAAW;AACrC,QAAKtB,QAAL,GAAgB,IAAhB;AACA,OAAI,CAAC,KAAKC,IAAL,CAAUsB,KAAf,EAAsB;AACrB,SAAKtB,IAAL,CAAUsB,KAAV,GAAkB,IAAlB;AACA;AACD,GALc,EAKZ,IALY,CAAf;AAMA,SAAO5B,GAAG6B,QAAH,CAAYV,MAAZ,EAAoBK,QAApB,EAA8BE,QAA9B,CAAP;AACA,EApDO;;AAsDR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BAI,aAAY,sBAAY;AACvB,MAAI,KAAKzB,QAAL,IAAiB,CAAC,KAAKC,IAAL,CAAUyB,QAAhC,EAA0C;AACzC,QAAKC,IAAL,CAAUC,SAAV,CAAoB,KAAKhB,aAAL,EAApB;AACA;AACD,EAtFO;;AAwFRiB,uBAAsB,gCAAY;AACjC,OAAKF,IAAL,CAAUG,EAAV,CAAanC,GAAGoC,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA4C,UAAUC,KAAV,EAAiB;AAC5D,QAAKT,UAAL;AACA,GAFD,EAEG,IAFH;AAGA,EA5FO;;AA8FR;;;;;;;;;;;;;;;;;AAiBG;;AAEA;;AAEAU,MAnHK,mBAmHI,CAER;AArHI;;AAuHL;AAvHJ","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n\textends: cc.Component,\r\n\r\n    properties: {\r\n\t\tjumpAble: true,\r\n\t    // 暂存 Game 对象的引用\r\n\t    game: {\r\n\t\t    default: null,\r\n\t\t    serializable: false\r\n\t    },\r\n\t    // 主角跳跃高度\r\n\t    jumpHeight: 0,\r\n\t    // 主角跳跃持续时间\r\n\t    jumpDuration: 0,\r\n\t    // 最大移动速度\r\n\t    maxMoveSpeed: 0,\r\n\t    // 加速度\r\n\t    accel: 0\r\n    },\r\n\t\r\n\tonLoad: function () {\r\n\t\t// 初始化跳跃动作\r\n\t\t/*this.jumpAction = this.setJumpAction();\r\n\t\tthis.node.runAction(this.jumpAction);*/\r\n\t\t\r\n\t\t// 加速度方向开关\r\n\t\tthis.accLeft = false;\r\n\t\tthis.accRight = false;\r\n\t\t// 主角当前水平方向速度\r\n\t\tthis.xSpeed = 0;\r\n\t\t\r\n\t\t// 初始化键盘输入监听\r\n\t\t// this.setInputControl();\r\n\t\t// this.setInputTouchControl();\r\n\t},\r\n \r\n\tsetJumpAction: function () {\r\n\t\tvar self = this;\r\n\t\tthis.jumpAble = false;\r\n\t\t// 跳跃上升\r\n\t\tvar jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n\t\t// 下落\r\n\t\tvar jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\t\t// 不断重复\r\n\t\t// return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n\t\tvar finished = cc.callFunc(function() {\r\n\t\t\tthis.jumpAble = true;\r\n\t\t\tif (!this.game.round) {\r\n\t\t\t\tthis.game.round = true;\r\n\t\t\t}\r\n\t\t}, this);\r\n\t\treturn cc.sequence(jumpUp, jumpDown, finished);\r\n\t},\r\n\t\r\n\t/*setInputControl: function () {\r\n\t\tvar self = this;\r\n\t\t// 添加键盘事件监听\r\n\t\t// 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n\t\t\tswitch(event.keyCode) {\r\n\t\t\t\tcase cc.KEY.a:\r\n\t\t\t\t\tself.accLeft = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase cc.KEY.d:\r\n\t\t\t\t\tself.accRight = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// 松开按键时，停止向该方向的加速\r\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n\t\t\tswitch(event.keyCode) {\r\n\t\t\t\tcase cc.KEY.a:\r\n\t\t\t\t\tself.accLeft = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase cc.KEY.d:\r\n\t\t\t\t\tself.accRight = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t},*/\r\n\t\r\n\tplayerJump: function () {\r\n\t\tif (this.jumpAble && !this.game.gameOver) {\r\n\t\t\tthis.node.runAction(this.setJumpAction());\r\n\t\t}\r\n\t},\r\n\t\r\n\tsetInputTouchControl: function () {\r\n\t\tthis.node.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n\t\t\tthis.playerJump();\r\n\t\t}, this);\r\n\t},\r\n\t\r\n\t/*update: function (dt) {\r\n\t\t// 根据当前加速度方向每帧更新速度\r\n\t\tif (this.accLeft) {\r\n\t\t\tthis.xSpeed -= this.accel * dt;\r\n\t\t} else if (this.accRight) {\r\n\t\t\tthis.xSpeed += this.accel * dt;\r\n\t\t}\r\n\t\t// 限制主角的速度不能超过最大值\r\n\t\tif ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n\t\t\t// if speed reach limit, use max speed with current direction\r\n\t\t\tthis.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n\t\t}\r\n\t\t\r\n\t\t// 根据当前速度更新主角的位置\r\n\t\tthis.node.x += this.xSpeed * dt;\r\n\t},*/\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}